{"ast":null,"code":"var _jsxFileName = \"/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/deleterating.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DeleteRating({\n  ratingId,\n  onDataChanged\n}) {\n  _s();\n  //NOTE HERE THE USER SHOULDN'T NEED TO INSERT ID, \n  //SHOULD ONLY NEED TO CLICK ON SONG IN RATINGS TABLE AND DELETE PAGE WILL SHOW UP\n  //BACKEND DOES NEED ID TO RUN THOUGH\n  // const [username, setUsername] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  //const navigate = useNavigate();\n\n  let handleSubmit = async e => {\n    //   setUsername(localStorage.getItem(\"user\"));\n    //   e.preventDefault();\n    try {\n      const username = localStorage.getItem(\"user\");\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/deleterating\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"id\": ratingId\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        // setUsername(\"\");\n        // setId(\"\");\n        setMessage(\"Rating Deleted\");\n        onDataChanged();\n        // Redirect user to ratings page\n        // navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n        // Access the error message from backend\n        setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeleteRating\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Are you sure you want to delete this rating?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setMessage(\"\"),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 43\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(DeleteRating, \"EiOGSxO4GWQlH0sM782nQ9JwuAs=\");\n_c = DeleteRating;\nexport default DeleteRating;\nvar _c;\n$RefreshReg$(_c, \"DeleteRating\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DeleteRating","ratingId","onDataChanged","_s","message","setMessage","handleSubmit","e","username","localStorage","getItem","res","fetch","method","body","JSON","stringify","headers","resJson","json","status","error","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/deleterating.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { Navigate } from \"react-router-dom\";\n\nfunction DeleteRating({ ratingId, onDataChanged }) {\n  //NOTE HERE THE USER SHOULDN'T NEED TO INSERT ID, \n  //SHOULD ONLY NEED TO CLICK ON SONG IN RATINGS TABLE AND DELETE PAGE WILL SHOW UP\n  //BACKEND DOES NEED ID TO RUN THOUGH\n  // const [username, setUsername] = useState(\"\");\n  // const [id, setId] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  //const navigate = useNavigate();\n \n  let handleSubmit = async (e) => {\n  //   setUsername(localStorage.getItem(\"user\"));\n  //   e.preventDefault();\n    try {\n      const username = localStorage.getItem(\"user\");\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/deleterating\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"id\": ratingId\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        // setUsername(\"\");\n        // setId(\"\");\n        setMessage(\"Rating Deleted\");\n        onDataChanged(); \n        // Redirect user to ratings page\n        // navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n          // Access the error message from backend\n          setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"DeleteRating\">\n      {/* <form onSubmit={handleSubmit}>\n        <input\n          type=\"number\"\n          value={id}\n          placeholder=\"Id\"\n          onChange={(e) => setId(e.target.value)}\n        />\n        <button type=\"submit\">Delete</button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form> */}\n      <p>Are you sure you want to delete this rating?</p>\n      <button onClick={handleSubmit}>Delete</button>\n      <button onClick={() => setMessage(\"\")}>Cancel</button>\n\n      <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n    </div>\n  );\n  }\n  \n  export default DeleteRating;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACjD;EACA;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C;;EAEA,IAAIS,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC;IACA;IACE,IAAI;MACF,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAE;QAC3EC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,UAAU,EAAER,QAAQ;UACpB,IAAI,EAAEP;QACR,CAAC,CAAC;QACFgB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAIC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC9B,IAAIR,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QACtB;QACA;QACAf,UAAU,CAAC,gBAAgB,CAAC;QAC5BH,aAAa,CAAC,CAAC;QACf;QACA;MACF,CAAC,MAAM,IAAIS,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAf,UAAU,CAACa,OAAO,CAACG,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLhB,UAAU,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACEvB,OAAA;IAAK0B,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAY3B3B,OAAA;MAAA2B,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnD/B,OAAA;MAAQgC,OAAO,EAAEzB,YAAa;MAAAoB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9C/B,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAM1B,UAAU,CAAC,EAAE,CAAE;MAAAqB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtD/B,OAAA;MAAK0B,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAEtB,OAAO,gBAAGL,OAAA;QAAA2B,QAAA,EAAItB;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAAG;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAER;AAAC3B,EAAA,CA/DMH,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAiEnB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}