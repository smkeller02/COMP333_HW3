{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/deleterating.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DeleteRating({\n  ratingId,\n  onDataChanged\n}) {\n  _s();\n  // State to manage the message displayed to the user\n  const [message, setMessage] = useState(\"\");\n  // State to control the visibility of the delete confirmation form\n  const [showForm, setShowForm] = useState(true);\n\n  // Handles form submission\n  let handleSubmit = async e => {\n    try {\n      // Get the username from local storage\n      const username = localStorage.getItem(\"user\");\n      // Send a DELETE request to the server to delete the rating\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/deleterating\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"id\": ratingId\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        // If ok response, set appropriate message and trigger the parent component to refresh the data\n        setMessage(\"Rating Deleted\");\n        onDataChanged();\n      } else if (res.status === 400) {\n        // If bad response, access the error message from backend\n        setMessage(resJson.error);\n      } else {\n        // If other error, send generic message\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle cancellation and hide the form\n  const handleCancel = () => {\n    // Hide the form when the Cancel button is clicked\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DeleteRating\",\n    children: showForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Are you sure you want to delete this rating?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 47\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(DeleteRating, \"k1lIWRXG8GVX+n0A6v9iMAv9b+E=\");\n_c = DeleteRating;\nexport default DeleteRating;\nvar _c;\n$RefreshReg$(_c, \"DeleteRating\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","DeleteRating","ratingId","onDataChanged","_s","message","setMessage","showForm","setShowForm","handleSubmit","e","username","localStorage","getItem","res","fetch","method","body","JSON","stringify","headers","resJson","json","status","error","err","console","log","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/deleterating.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction DeleteRating({ ratingId, onDataChanged }) {\n    // State to manage the message displayed to the user\n  const [message, setMessage] = useState(\"\");\n    // State to control the visibility of the delete confirmation form\n  const [showForm, setShowForm] = useState(true);\n \n  // Handles form submission\n  let handleSubmit = async (e) => {\n    try {\n      // Get the username from local storage\n      const username = localStorage.getItem(\"user\");\n      // Send a DELETE request to the server to delete the rating\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/deleterating\", {\n        method: \"DELETE\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"id\": ratingId\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        // If ok response, set appropriate message and trigger the parent component to refresh the data\n        setMessage(\"Rating Deleted\");\n        onDataChanged(); \n      } else if (res.status === 400) {\n          // If bad response, access the error message from backend\n          setMessage(resJson.error);\n      } else {\n        // If other error, send generic message\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Handle cancellation and hide the form\n  const handleCancel = () => {\n    // Hide the form when the Cancel button is clicked\n    setShowForm(false);\n  };\n\n  return (\n    <div className=\"DeleteRating\">\n      {showForm ? (\n        <>\n          <p>Are you sure you want to delete this rating?</p>\n          <button onClick={handleSubmit}>Delete</button>\n          <button onClick={handleCancel}>Cancel</button>\n          <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n        </>\n      ) : null}\n    </div>\n  );\n  }\n  \n  export default DeleteRating;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC/C;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC;EACF,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,IAAIa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MAC7C;MACA,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,qDAAqD,EAAE;QAC3EC,MAAM,EAAE,QAAQ;QAChBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,UAAU,EAAER,QAAQ;UACpB,IAAI,EAAET;QACR,CAAC,CAAC;QACFkB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAIC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC9B,IAAIR,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QACtB;QACAjB,UAAU,CAAC,gBAAgB,CAAC;QAC5BH,aAAa,CAAC,CAAC;MACjB,CAAC,MAAM,IAAIW,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAjB,UAAU,CAACe,OAAO,CAACG,KAAK,CAAC;MAC7B,CAAC,MAAM;QACL;QACAlB,UAAU,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOmB,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;;EAED;EACA,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzB;IACApB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAK+B,SAAS,EAAC,cAAc;IAAAC,QAAA,EAC1BvB,QAAQ,gBACPT,OAAA,CAAAE,SAAA;MAAA8B,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAG;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnDpC,OAAA;QAAQqC,OAAO,EAAE1B,YAAa;QAAAqB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CpC,OAAA;QAAQqC,OAAO,EAAEP,YAAa;QAAAE,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CpC,OAAA;QAAK+B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEzB,OAAO,gBAAGP,OAAA;UAAAgC,QAAA,EAAIzB;QAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eAClE,CAAC,GACD;EAAI;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER;AAAC9B,EAAA,CAzDMH,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA2DnB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}