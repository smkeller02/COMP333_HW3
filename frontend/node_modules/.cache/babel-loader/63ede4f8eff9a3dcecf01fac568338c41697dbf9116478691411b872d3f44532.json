{"ast":null,"code":"var _jsxFileName = \"/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/updaterating.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateRating({\n  ratingId\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // State for displaying messages\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUsername(localStorage.getItem(\"user\"));\n    setMessage(\"\"); // Clear any previous messages\n\n    try {\n      const res = await fetch(\"http://localhost/COMP333_HW3/index.php/updaterating\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: ratingId,\n          username,\n          artist,\n          song,\n          rating\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const resJson = await res.json();\n      if (res.status === 200) {\n        setArtist(\"\"); // Clear form fields\n        setSong(\"\");\n        setRating(\"\");\n        setMessage(\"Rating updated\");\n      } else if (res.status === 400) {\n        setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n      setMessage(\"An error occurred.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateRating\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: artist,\n        placeholder: \"Artist\",\n        onChange: e => setArtist(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: song,\n        placeholder: \"Song\",\n        onChange: e => setSong(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: rating,\n        placeholder: \"Rating\",\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateRating, \"EX/MFfgHG0kBJwmBskBofZ4neUw=\");\n_c = UpdateRating;\nexport default UpdateRating;\nvar _c;\n$RefreshReg$(_c, \"UpdateRating\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpdateRating","ratingId","_s","username","setUsername","artist","setArtist","song","setSong","rating","setRating","message","setMessage","handleSubmit","e","preventDefault","localStorage","getItem","res","fetch","method","body","JSON","stringify","id","headers","resJson","json","status","error","err","console","log","className","children","onSubmit","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/updaterating.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction UpdateRating({ ratingId }) {\n  const [username, setUsername] = useState(\"\");\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [message, setMessage] = useState(\"\"); // State for displaying messages\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUsername(localStorage.getItem(\"user\"));\n    setMessage(\"\"); // Clear any previous messages\n\n    try {\n      const res = await fetch(\"http://localhost/COMP333_HW3/index.php/updaterating\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          id: ratingId,\n          username,\n          artist,\n          song,\n          rating,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const resJson = await res.json();\n      if (res.status === 200) {\n        setArtist(\"\"); // Clear form fields\n        setSong(\"\");\n        setRating(\"\");\n        setMessage(\"Rating updated\");\n      } else if (res.status === 400) {\n        setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n      setMessage(\"An error occurred.\");\n    }\n  };\n\n  return (\n    <div className=\"UpdateRating\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={artist}\n          placeholder=\"Artist\"\n          onChange={(e) => setArtist(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={song}\n          placeholder=\"Song\"\n          onChange={(e) => setSong(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          value={rating}\n          placeholder=\"Rating\"\n          onChange={(e) => setRating(e.target.value)}\n        />\n        <button type=\"submit\">Update rating</button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form>\n    </div>\n  );\n}\n\nexport default UpdateRating;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}