{"ast":null,"code":"var _jsxFileName = \"/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/addnewrating.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddNewRating({\n  onRatingAdded\n}) {\n  _s();\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  //const navigate = useNavigate();\n\n  const username = localStorage.getItem(\"user\");\n  let handleSubmit = async e => {\n    console.log(username);\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/addnewrating\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"artist\": artist,\n          \"song\": song,\n          \"rating\": rating\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setArtist(\"\");\n        setSong(\"\");\n        setRating(\"\");\n        setMessage(\"Rating added\");\n        onRatingAdded();\n\n        // Automatically clear the message after 3 seconds\n        setTimeout(() => setMessage(\"\"), 3000);\n        // Redirect user to ratings page\n        //navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n        // Access the error message from backend\n        setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddNewRating\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: artist,\n        placeholder: \"Artist\",\n        onChange: e => setArtist(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: song,\n        placeholder: \"Song\",\n        onChange: e => setSong(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: rating,\n        placeholder: \"Rating\",\n        onChange: e => setRating(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add rating\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AddNewRating, \"52Wm9RdYeXPgNHXvFB7D6Hl7y/w=\");\n_c = AddNewRating;\nexport default AddNewRating;\nvar _c;\n$RefreshReg$(_c, \"AddNewRating\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddNewRating","onRatingAdded","_s","artist","setArtist","song","setSong","rating","setRating","message","setMessage","username","localStorage","getItem","handleSubmit","e","console","log","preventDefault","res","fetch","method","body","JSON","stringify","headers","resJson","json","status","setTimeout","error","err","className","children","onSubmit","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/addnewrating.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction AddNewRating({onRatingAdded}) {\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  //const navigate = useNavigate();\n \n  const username = localStorage.getItem(\"user\");\n  let handleSubmit = async (e) => {\n    console.log(username);\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/addnewrating\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"artist\": artist,\n          \"song\" : song,\n          \"rating\" : rating\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setArtist(\"\");\n        setSong(\"\");\n        setRating(\"\");\n        setMessage(\"Rating added\");\n        onRatingAdded();\n        \n        // Automatically clear the message after 3 seconds\n        setTimeout(() => setMessage(\"\"), 3000);\n        // Redirect user to ratings page\n        //navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n          // Access the error message from backend\n          setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"AddNewRating\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={artist}\n          placeholder=\"Artist\"\n          onChange={(e) => setArtist(e.target.value)}\n        />\n         <input\n          type=\"text\"\n          value={song}\n          placeholder=\"Song\"\n          onChange={(e) => setSong(e.target.value)}\n        /> \n        <input\n        type=\"text\"\n        value={rating}\n        placeholder=\"Rating\"\n        onChange={(e) => setRating(e.target.value)}\n      />\n      \n        <button type=\"submit\">Add rating</button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form>\n    </div>\n  );\n\n  }\n  \n  export default AddNewRating;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}