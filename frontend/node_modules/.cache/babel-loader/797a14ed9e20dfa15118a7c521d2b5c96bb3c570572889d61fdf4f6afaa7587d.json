{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Ratings from './ratingstable';\nimport LoginUser from './loginuser';\nimport CreateUser from './createuser';\nimport AddNewRating from './addnewrating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(\"\"); // To store the logged-in user\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [ratingDataChanged, setRatingDataChanged] = useState(false);\n  useEffect(() => {\n    // Check if the user is logged in\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      setUser(loggedInUser);\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // Dealing with logout pressed\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(\"\"); // Clear the user state\n    setLoggedIn(false); // Update the login status\n  };\n\n  // Handles refeshing data table with new data\n  const refreshRatingsData = () => {\n    setRatingDataChanged(!ratingDataChanged);\n  };\n\n  // Handles login status\n  const handleLoginSuccess = () => {\n    setLoggedIn(true); // Set the login status to true\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [!loggedIn &&\n      /*#__PURE__*/\n      // Display login and signup options if not logged in\n      _jsxDEV(\"div\", {\n        className: \"login-signup-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"big\",\n          children: \"Welcome to MusicUnited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Sign up / Log in to view the ratings!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-signup\",\n          children: [/*#__PURE__*/_jsxDEV(LoginUser, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(CreateUser, {\n            onLoginSuccess: handleLoginSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), loggedIn &&\n      /*#__PURE__*/\n      // Display the main content if logged in\n      _jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/ratingstable\",\n            element: /*#__PURE__*/_jsxDEV(Ratings, {\n              DataChanged: ratingDataChanged\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/addnewrating\",\n            element: /*#__PURE__*/_jsxDEV(AddNewRating, {\n              onRatingAdded: refreshRatingsData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), loggedIn &&\n      /*#__PURE__*/\n      // Display the right sidebar if logged in\n      _jsxDEV(\"div\", {\n        className: \"sidebar-right\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exit-button\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-song-rating\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Add New Song Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddNewRating, {\n            onRatingAdded: refreshRatingsData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r6TRnyoJzdfywYnKwjEF/gE6rHI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Link","Ratings","LoginUser","CreateUser","AddNewRating","jsxDEV","_jsxDEV","App","_s","user","setUser","loggedIn","setLoggedIn","ratingDataChanged","setRatingDataChanged","loggedInUser","localStorage","getItem","handleLogout","removeItem","refreshRatingsData","handleLoginSuccess","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onLoginSuccess","path","element","DataChanged","onRatingAdded","onClick","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Ratings from './ratingstable';\nimport LoginUser from './loginuser';\nimport CreateUser from './createuser';\nimport AddNewRating from './addnewrating';\n\nfunction App() {\n  const [user, setUser] = useState(\"\"); // To store the logged-in user\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [ratingDataChanged, setRatingDataChanged] = useState(false);\n\n  useEffect(() => {\n    // Check if the user is logged in\n    const loggedInUser = localStorage.getItem(\"user\");\n    if (loggedInUser) {\n      setUser(loggedInUser);\n      setLoggedIn(true);\n    }\n  }, []);\n\n  // Dealing with logout pressed\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setUser(\"\"); // Clear the user state\n    setLoggedIn(false); // Update the login status\n  };\n\n  // Handles refeshing data table with new data\n  const refreshRatingsData = () => {\n    setRatingDataChanged(!ratingDataChanged);\n  };\n\n  // Handles login status\n  const handleLoginSuccess = () => {\n    setLoggedIn(true); // Set the login status to true\n  };\n\n  return (\n    <Router>\n        <div className=\"app-container\">\n        {(!loggedIn && (\n          // Display login and signup options if not logged in\n          <div className=\"login-signup-center\">\n            <strong className=\"big\">Welcome to MusicUnited</strong>\n            <br/><br/>\n            <strong>Sign up / Log in to view the ratings!</strong>\n            <br/><br/>\n            <div className=\"login-signup\">\n              <LoginUser onLoginSuccess={handleLoginSuccess} /> {/* Display login form */}\n              <CreateUser onLoginSuccess={handleLoginSuccess} /> {/* Display user registration form */}\n            </div>\n          </div>\n        ))}\n\n        {loggedIn && (\n          // Display the main content if logged in\n          <div className=\"main-content\">\n            <Routes>\n              {/* Render Ratings component with prop indicating data changes */}\n              <Route path=\"/ratingstable\" element={<Ratings DataChanged={ratingDataChanged} />} />\n              {/* Render AddNewRating component with callback for rating addition */}\n              <Route path=\"/addnewrating\" element={<AddNewRating onRatingAdded={refreshRatingsData} />} />\n            </Routes>\n          </div>\n        )}\n\n        {loggedIn && (\n          // Display the right sidebar if logged in\n          <div className=\"sidebar-right\">\n            <button className=\"exit-button\" onClick={handleLogout}>\n              Logout\n            </button>\n\n            <div className=\"add-song-rating\">\n              {/* Form for adding a new song rating with a callback on success */}\n              <strong>Add New Song Rating</strong>\n              <AddNewRating onRatingAdded={refreshRatingsData} />\n            </div>\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}