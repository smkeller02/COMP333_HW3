{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/ratingstable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UpdateRating from './updaterating';\nimport DeleteRating from './deleterating';\nimport './Ratings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ratings(props) {\n  _s();\n  // State to hold the ratings data\n  const [ratings, setRatings] = useState([]);\n  // Get username from local storage\n  const user = localStorage.getItem(\"user\");\n  // Search query\n  const [q, setQ] = useState(\"\");\n  // Filter parameter\n  const [filterParam, setFilterParam] = useState('All');\n\n  // State to track which rating should be updated or deleted\n  const [updateRating, setUpdateRating] = useState(null);\n  const [deleteRating, setDeleteRating] = useState(null);\n  const [dataChanged, setDataChanged] = useState(false); // Track changes\n\n  const handleDataChange = props => {\n    setDataChanged(!dataChanged);\n    setUpdateRating(null);\n  };\n\n  // Fetch ratings data from the API\n  useEffect(() => {\n    fetch(\"http://localhost/COMP333_HW3/index.php/ratings\").then(response => {\n      return response.json();\n    }).then(data => {\n      setRatings(data);\n    }).catch(error => {\n      console.error(\"Error fetching ratings:\", error);\n    });\n  }, [dataChanged, props.DataChanged]);\n  if (!ratings) {\n    return null;\n  }\n\n  // Check if a song is created by the logged-in user\n  const isSongCreatedByUser = rating => {\n    // determine if the song is created by the logged-in user\n    return user === rating.username;\n  };\n\n  // Handle updating a rating\n  const handleUpdate = rating => {\n    setUpdateRating(rating);\n    setDeleteRating(null);\n  };\n\n  // Hangle canceling an update\n  const handleCancelUpdate = () => {\n    setUpdateRating(null);\n  };\n\n  // Hangle delete rating\n  const handleDelete = rating => {\n    if (isSongCreatedByUser(rating)) {\n      // Toggle the selected rating when the user clicks the \"Delete\" button\n      setDeleteRating(prevSelected => prevSelected === rating ? null : rating);\n      setUpdateRating(null);\n    }\n  };\n\n  // Handle canceling a delete request\n  const handleCancelDelete = () => {\n    setDeleteRating(null);\n  };\n\n  // Function to render star ratings\n  const renderStars = rating => {\n    const maxRating = 5;\n\n    // Create an array to store star elements\n    const starArray = [];\n\n    // Fill the stars based on the rating value\n    for (let i = 1; i <= maxRating; i++) {\n      if (i <= rating) {\n        // Filled star\n        starArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star-filled\",\n          style: {\n            color: \"yellow\"\n          },\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this));\n      } else {\n        // Empty star\n        starArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star-empty\",\n          style: {\n            color: \"gray\"\n          },\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-rating\",\n      children: starArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Component to display top-rated songs\n  function TopRatedSongs({\n    ratings\n  }) {\n    // Sort the ratings in descending order based on the star rating value (select the top five)\n    const topRatedSongs = [...ratings].sort((a, b) => b.rating - a.rating).slice(0, 5);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Top Rated Songs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topRatedSongs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [song.song, \" by \", song.artist, \" - Rating: \", song.rating]\n        }, song.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Component to display average song ratings\n  function AverageSongRatings({\n    ratings\n  }) {\n    // calculate total rating and the number of ratings\n    const totalRatings = ratings.length;\n    const totalRatingValue = ratings.reduce((sum, rating) => sum + rating.rating, 0);\n    // in edge case, where there is no rating\n    const averageRating = totalRatings > 0 ? (totalRatingValue / totalRatings).toFixed(2) : 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Average Song Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average Rating: \", averageRating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Component to display the number of songs per artist\n  function SongsPerArtist({\n    ratings\n  }) {\n    const artistCounts = {};\n    // Iterate through the ratings to count the songs per artist.\n    ratings.forEach(rating => {\n      artistCounts[rating.artist] = (artistCounts[rating.artist] || 0) + 1;\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Number of Songs per Artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(artistCounts).map(([artist, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [artist, \": \", count, \" \", count === 1 ? 'song' : 'songs', \" \"]\n        }, artist, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Function to filter the items based on the search query and filter parameter\n  const filterItems = () => {\n    return ratings.filter(rating => {\n      const searchTerms = q === null || q === void 0 ? void 0 : q.toLowerCase().trim();\n      if (filterParam === \"All\") {\n        var _rating$username, _rating$artist, _rating$song, _rating$rating;\n        return searchTerms === \"\" || ((_rating$username = rating.username) === null || _rating$username === void 0 ? void 0 : _rating$username.toLowerCase().includes(searchTerms)) || ((_rating$artist = rating.artist) === null || _rating$artist === void 0 ? void 0 : _rating$artist.toLowerCase().includes(searchTerms)) || ((_rating$song = rating.song) === null || _rating$song === void 0 ? void 0 : _rating$song.toLowerCase().includes(searchTerms)) || ((_rating$rating = rating.rating) === null || _rating$rating === void 0 ? void 0 : _rating$rating.toString().includes(searchTerms));\n      } else {\n        var _rating$filterPropert;\n        const filterProperty = filterParam === null || filterParam === void 0 ? void 0 : filterParam.toLowerCase();\n        return (_rating$filterPropert = rating[filterProperty]) === null || _rating$filterPropert === void 0 ? void 0 : _rating$filterPropert.toLowerCase().includes(searchTerms);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RatingsTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome! \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 20\n      }, this), \" This is \", user, \"'s Rating Table\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          name: \"search-form\",\n          id: \"search-form\",\n          className: \"search-input\",\n          placeholder: \"Search for...\",\n          value: q,\n          onChange: e => setQ(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Search ratings here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setFilterParam(e.target.value),\n          className: \"custom-select\",\n          \"aria-label\": \"Filter Ratings By...\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"No Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"username\",\n            children: \"User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"artist\",\n            children: \"Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"song\",\n            children: \"Song\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"rating\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterItems().map(rating => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratings-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: rating.song\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), \" by \", rating.artist, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderStars(rating.rating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"rated by: \", rating.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), isSongCreatedByUser(rating) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [updateRating && updateRating.id === rating.id && updateRating.username === rating.username ?\n          /*#__PURE__*/\n          // If in update mode, render the UpdateRating component\n          _jsxDEV(UpdateRating, {\n            ratingId: updateRating.id,\n            user: updateRating.username,\n            onDataChanged: handleDataChange,\n            isUpdateMode: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this) :\n          /*#__PURE__*/\n          // Render update icon to start the update process\n          _jsxDEV(\"span\", {\n            onClick: () => handleUpdate(rating),\n            className: \"icon-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-pencil-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleDelete(rating),\n            className: \"icon-button\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), deleteRating && deleteRating.id === rating.id &&\n        /*#__PURE__*/\n        // If in delete mode, render the DeleteRating component\n        _jsxDEV(DeleteRating, {\n          ratingId: deleteRating.id,\n          onDelete: () => handleDelete(rating),\n          onDataChanged: handleDataChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, rating.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TopRatedSongs, {\n      ratings: ratings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AverageSongRatings, {\n      ratings: ratings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SongsPerArtist, {\n      ratings: ratings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(Ratings, \"ieWOrZRbptWVFoapIhXqidOV8fY=\");\n_c = Ratings;\nexport default Ratings;\nvar _c;\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"names":["React","useState","useEffect","UpdateRating","DeleteRating","jsxDEV","_jsxDEV","Ratings","props","_s","ratings","setRatings","user","localStorage","getItem","q","setQ","filterParam","setFilterParam","updateRating","setUpdateRating","deleteRating","setDeleteRating","dataChanged","setDataChanged","handleDataChange","fetch","then","response","json","data","catch","error","console","DataChanged","isSongCreatedByUser","rating","username","handleUpdate","handleCancelUpdate","handleDelete","prevSelected","handleCancelDelete","renderStars","maxRating","starArray","i","push","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","TopRatedSongs","topRatedSongs","sort","a","b","slice","map","song","artist","id","AverageSongRatings","totalRatings","length","totalRatingValue","reduce","sum","averageRating","toFixed","SongsPerArtist","artistCounts","forEach","Object","entries","count","filterItems","filter","searchTerms","toLowerCase","trim","_rating$username","_rating$artist","_rating$song","_rating$rating","includes","toString","_rating$filterPropert","filterProperty","htmlFor","type","name","placeholder","value","onChange","e","target","ratingId","onDataChanged","isUpdateMode","onClick","onDelete","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/ratingstable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UpdateRating from './updaterating';\nimport DeleteRating from './deleterating';\nimport './Ratings.css'\n\n\nfunction Ratings(props) {\n  // State to hold the ratings data\n  const [ratings, setRatings] = useState([]);\n  // Get username from local storage\n  const user = localStorage.getItem(\"user\");\n  // Search query\n  const [q, setQ] = useState(\"\");\n  // Filter parameter\n  const [filterParam, setFilterParam] = useState('All');\n\n  // State to track which rating should be updated or deleted\n  const [updateRating, setUpdateRating] = useState(null);\n  const [deleteRating, setDeleteRating] = useState(null);\n  const [dataChanged, setDataChanged] = useState(false); // Track changes\n\n  const handleDataChange = (props) => {\n    setDataChanged(!dataChanged); \n    setUpdateRating(null);\n  };\n\n  // Fetch ratings data from the API\n  useEffect(() => {\n    fetch(\"http://localhost/COMP333_HW3/index.php/ratings\")\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setRatings(data)\n      })\n      .catch((error) => {\n        console.error(\"Error fetching ratings:\", error);\n      });\n    }, [dataChanged, props.DataChanged]);\n\n  if (!ratings) {\n    return null;\n  }\n\n  // Check if a song is created by the logged-in user\n  const isSongCreatedByUser = (rating) => {\n    // determine if the song is created by the logged-in user\n    return user === rating.username;\n  };\n\n  // Handle updating a rating\n  const handleUpdate = (rating) => {\n    setUpdateRating(rating);\n    setDeleteRating(null);\n  };\n  \n  // Hangle canceling an update\n  const handleCancelUpdate = () => {\n    setUpdateRating(null);\n  };\n\n  // Hangle delete rating\n  const handleDelete = (rating) => {\n    if (isSongCreatedByUser(rating)) {\n      // Toggle the selected rating when the user clicks the \"Delete\" button\n      setDeleteRating((prevSelected) =>\n        prevSelected === rating ? null : rating\n      );\n      setUpdateRating(null);\n    }\n  };\n\n  // Handle canceling a delete request\n  const handleCancelDelete = () => {\n    setDeleteRating(null);\n  };\n\n  // Function to render star ratings\n  const renderStars = (rating) => {\n    const maxRating = 5; \n\n    // Create an array to store star elements\n    const starArray = [];\n\n    // Fill the stars based on the rating value\n    for (let i = 1; i <= maxRating; i++) {\n      if (i <= rating) {\n        // Filled star\n        starArray.push(\n          <span key={i} className=\"star-filled\" style={{ color: \"yellow\" }}>\n            &#9733;\n          </span>\n        );\n      } else {\n        // Empty star\n        starArray.push(\n          <span key={i} className=\"star-empty\" style={{ color: \"gray\" }}>\n            &#9733;\n          </span>\n        );\n      }\n    }\n\n    return (\n      <div className=\"star-rating\">{starArray}</div>\n    );\n  };\n\n  // Component to display top-rated songs\n  function TopRatedSongs({ ratings }) {\n    // Sort the ratings in descending order based on the star rating value (select the top five)\n    const topRatedSongs = [...ratings].sort((a, b) => b.rating - a.rating).slice(0, 5);\n  \n    return (\n      <div>\n        <h2>Top Rated Songs</h2>\n        <ul>\n          {topRatedSongs.map((song) => (\n            <li key={song.id}>{song.song} by {song.artist} - Rating: {song.rating}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  \n  // Component to display average song ratings\n  function AverageSongRatings({ ratings }) {\n    // calculate total rating and the number of ratings\n    const totalRatings = ratings.length;\n    const totalRatingValue = ratings.reduce((sum, rating) => sum + rating.rating, 0);\n    // in edge case, where there is no rating\n    const averageRating = totalRatings > 0 ? (totalRatingValue / totalRatings).toFixed(2) : 0;\n  \n    return (\n      <div>\n        <h2>Average Song Ratings</h2>\n        <p>Average Rating: {averageRating}</p>\n      </div>\n    );\n  }\n\n    // Component to display the number of songs per artist\n  function SongsPerArtist({ ratings }) {\n    const artistCounts = {};\n    // Iterate through the ratings to count the songs per artist.\n    ratings.forEach((rating) => {\n      artistCounts[rating.artist] = (artistCounts[rating.artist] || 0) + 1;\n    });\n  \n    return (\n      <div>\n        <h2>Number of Songs per Artist</h2>\n        <ul>\n          {Object.entries(artistCounts).map(([artist, count]) => (\n            <li key={artist}>\n              {artist}: {count} {count === 1 ? 'song' : 'songs'} {/* song if 1, songs if more than 1*/}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n\n  // Function to filter the items based on the search query and filter parameter\n  const filterItems = () => {\n    return ratings.filter((rating) => {\n      const searchTerms = q?.toLowerCase().trim();\n      if (filterParam === \"All\") {\n        return (\n          searchTerms === \"\" ||\n          rating.username?.toLowerCase().includes(searchTerms) ||\n          rating.artist?.toLowerCase().includes(searchTerms) ||\n          rating.song?.toLowerCase().includes(searchTerms) ||\n          rating.rating?.toString().includes(searchTerms)\n        );\n      } else {\n        const filterProperty = filterParam?.toLowerCase();\n        return rating[filterProperty]?.toLowerCase().includes(searchTerms);\n      }\n    });\n  };\n\n\n  return (\n    <div className=\"RatingsTable\">\n      <h1>Welcome! <br/> This is {user}'s Rating Table</h1>\n      <div className=\"search-wrapper\">\n        {/* Input field for searching ratings */}\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n          <span className=\"sr-only\">Search ratings here</span>\n        </label>\n        <div className=\"select\">\n          {/* Dropdown for filtering ratings */}\n          <select\n            onChange={(e) => setFilterParam(e.target.value)}\n            className=\"custom-select\"\n            aria-label=\"Filter Ratings By...\"\n          >\n            {/* Filter by options */}\n            <option value=\"All\">No Filter</option>\n            <option value=\"username\">User</option>\n            <option value=\"artist\">Artist</option>\n            <option value=\"song\">Song</option>\n            <option value=\"rating\">Rating</option>\n          </select>\n          <span className=\"focus\"></span>\n        </div>\n      </div>\n      <ul>\n        {/* Display ratings results */}\n        {filterItems().map((rating) => (\n          <div className=\"ratings-preview\" key={rating.id}>\n            <strong>{rating.song}</strong> by {rating.artist}\n            <p>{renderStars(rating.rating)}</p>\n            <p>rated by: {rating.username}</p>\n            {isSongCreatedByUser(rating) && (\n              <div className=\"button-container\">\n                {updateRating && updateRating.id === rating.id && updateRating.username === rating.username ? (\n                  // If in update mode, render the UpdateRating component\n                  <UpdateRating ratingId={updateRating.id} user={updateRating.username} onDataChanged={handleDataChange} isUpdateMode={true} />\n                ) : (\n                  // Render update icon to start the update process\n                  <span onClick={() => handleUpdate(rating)} className=\"icon-button\">\n                    <i className=\"fas fa-pencil-alt\"></i> {/* Pencil icon for Update */}\n                  </span>\n                )}\n                {/* Render delete icon to start the delete process */}\n                <span onClick={() => handleDelete(rating)} className=\"icon-button\">\n                  <i className=\"fas fa-trash-alt\"></i> {/* Trashcan icon for Delete */}\n                </span>\n              </div>\n            )}\n            {deleteRating && deleteRating.id === rating.id && (\n              // If in delete mode, render the DeleteRating component\n              <DeleteRating ratingId={deleteRating.id} onDelete={() => handleDelete(rating) } onDataChanged={handleDataChange} />\n            )}\n            <hr/>\n          </div>\n        ))}\n      </ul> \n\n      {/* Statistics Components */}\n      <TopRatedSongs ratings={ratings} />\n      <AverageSongRatings ratings={ratings} />\n      <SongsPerArtist ratings={ratings} />\n    </div>\n  )\n}\n\nexport default Ratings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}