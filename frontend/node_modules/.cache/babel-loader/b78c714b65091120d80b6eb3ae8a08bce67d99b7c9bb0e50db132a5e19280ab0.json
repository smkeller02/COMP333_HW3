{"ast":null,"code":"var _jsxFileName = \"/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/ratingstable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport UpdateRating from './updaterating';\nimport DeleteRating from './deleterating';\nimport './Ratings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Ratings() {\n  _s();\n  // State to hold the ratings data\n  const [ratings, setRatings] = useState(\"\");\n  const user = localStorage.getItem(\"user\");\n\n  // State to track which rating should be updated or deleted\n  const [updateRating, setUpdateRating] = useState(null);\n  const [deleteRating, setDeleteRating] = useState(null);\n\n  // Fetch ratings data from the API\n  useEffect(() => {\n    fetch(\"http://localhost/COMP333_HW3/index.php/ratings\").then(response => {\n      return response.json();\n    }).then(data => {\n      setRatings(data);\n    }).catch(error => {\n      console.error(\"Error fetching ratings:\", error);\n    });\n  }, []);\n  if (!ratings) {\n    return null;\n  }\n  const isSongCreatedByUser = rating => {\n    // determine if the song is created by the logged-in user\n    return user === rating.username;\n  };\n  const handleUpdate = rating => {\n    setUpdateRating(rating);\n    setDeleteRating(null);\n  };\n  const handleCancelUpdate = () => {\n    setUpdateRating(null);\n  };\n  const handleDelete = rating => {\n    if (isSongCreatedByUser(rating)) {\n      // Toggle the selected rating when the user clicks the \"Delete\" button\n      setDeleteRating(prevSelected => prevSelected === rating ? null : rating);\n      setUpdateRating(null);\n    }\n  };\n  console.log(ratings);\n  const renderStars = rating => {\n    const maxRating = 5;\n\n    // Create an array to store star elements\n    const starArray = [];\n\n    // Fill the stars based on the rating value\n    for (let i = 1; i <= maxRating; i++) {\n      if (i <= rating) {\n        // Filled star\n        starArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star-filled\",\n          style: {\n            color: \"yellow\"\n          },\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this));\n      } else {\n        // Empty star\n        starArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"star-empty\",\n          style: {\n            color: \"gray\"\n          },\n          children: \"\\u2605\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star-rating\",\n      children: starArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RatingsTable\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Welcome, \", user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ratings-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: renderStars(rating.rating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"rated by: \", rating.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), isSongCreatedByUser(rating) && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleUpdate(rating),\n            className: \"update-icon\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => handleDelete(rating),\n            className: \"delete-icon\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), updateRating && updateRating.id === rating.id && updateRating.username === rating.username && /*#__PURE__*/_jsxDEV(UpdateRating, {\n          ratingId: updateRating.id,\n          user: updateRating.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), deleteRating && deleteRating.id === rating.id && /*#__PURE__*/_jsxDEV(DeleteRating, {\n          ratingId: deleteRating.id,\n          onDelete: () => handleDelete(rating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this)]\n      }, rating.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(Ratings, \"VKLUXsSwY1GcqVICDz9HzjDzCDc=\");\n_c = Ratings;\nexport default Ratings;\nvar _c;\n$RefreshReg$(_c, \"Ratings\");","map":{"version":3,"names":["React","useState","useEffect","UpdateRating","DeleteRating","jsxDEV","_jsxDEV","Ratings","_s","ratings","setRatings","user","localStorage","getItem","updateRating","setUpdateRating","deleteRating","setDeleteRating","fetch","then","response","json","data","catch","error","console","isSongCreatedByUser","rating","username","handleUpdate","handleCancelUpdate","handleDelete","prevSelected","log","renderStars","maxRating","starArray","i","push","className","style","color","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","ratingId","onDelete","_c","$RefreshReg$"],"sources":["/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/ratingstable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport UpdateRating from './updaterating';\nimport DeleteRating from './deleterating';\nimport './Ratings.css';\n\nfunction Ratings() {\n  // State to hold the ratings data\n  const [ratings, setRatings] = useState(\"\");\n  const user = localStorage.getItem(\"user\");\n\n  // State to track which rating should be updated or deleted\n  const [updateRating, setUpdateRating] = useState(null);\n  const [deleteRating, setDeleteRating] = useState(null);\n\n  // Fetch ratings data from the API\n  useEffect(() => {\n    fetch(\"http://localhost/COMP333_HW3/index.php/ratings\")\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setRatings(data)\n      })\n      .catch((error) => {\n        console.error(\"Error fetching ratings:\", error);\n      });\n    }, []);\n\n  if (!ratings) {\n    return null;\n  }\n\n  const isSongCreatedByUser = (rating) => {\n    // determine if the song is created by the logged-in user\n    return user === rating.username;\n  };\n\n  const handleUpdate = (rating) => {\n    setUpdateRating(rating);\n    setDeleteRating(null);\n  };\n  \n  const handleCancelUpdate = () => {\n    setUpdateRating(null);\n  };\n\n  const handleDelete = (rating) => {\n    if (isSongCreatedByUser(rating)) {\n      // Toggle the selected rating when the user clicks the \"Delete\" button\n      setDeleteRating((prevSelected) =>\n        prevSelected === rating ? null : rating\n      );\n      setUpdateRating(null);\n    }\n  };\n\n  console.log(ratings)\n\n  const renderStars = (rating) => {\n    const maxRating = 5; \n\n    // Create an array to store star elements\n    const starArray = [];\n\n    // Fill the stars based on the rating value\n    for (let i = 1; i <= maxRating; i++) {\n      if (i <= rating) {\n        // Filled star\n        starArray.push(\n          <span key={i} className=\"star-filled\" style={{ color: \"yellow\" }}>\n            &#9733;\n          </span>\n        );\n      } else {\n        // Empty star\n        starArray.push(\n          <span key={i} className=\"star-empty\" style={{ color: \"gray\" }}>\n            &#9733;\n          </span>\n        );\n      }\n    }\n\n    return (\n      <div className=\"star-rating\">{starArray}</div>\n    );\n  };\n\n  return (\n    <div className=\"RatingsTable\">\n      <h1>Ratings</h1>\n      <p>Welcome, {user}</p>\n      <ul>\n        {ratings.map((rating) => (\n          <div className=\"ratings-preview\" key={rating.id}>\n            <p>{renderStars(rating.rating)}</p>\n            <p>rated by: {rating.username}</p>\n            {isSongCreatedByUser(rating) && (\n              <div>\n                <span onClick={() => handleUpdate(rating)} className=\"update-icon\">\n                  Update\n                </span>\n                <span onClick={() => handleDelete(rating)} className=\"delete-icon\">\n                  Delete\n                </span>\n              </div>\n            )}\n            {updateRating && updateRating.id === rating.id && updateRating.username === rating.username && (\n              <UpdateRating ratingId={updateRating.id} user={updateRating.username}/>\n            )}\n            {deleteRating && deleteRating.id === rating.id && (\n              <DeleteRating ratingId={deleteRating.id} onDelete={() => handleDelete(rating)} />\n            )}\n          </div>\n        ))}\n      </ul> \n    </div>\n  )\n}\n\nexport default Ratings;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAEzC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACdgB,KAAK,CAAC,gDAAgD,CAAC,CACpDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACdZ,UAAU,CAACY,IAAI,CAAC;IAClB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,IAAI,CAACf,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,MAAMiB,mBAAmB,GAAIC,MAAM,IAAK;IACtC;IACA,OAAOhB,IAAI,KAAKgB,MAAM,CAACC,QAAQ;EACjC,CAAC;EAED,MAAMC,YAAY,GAAIF,MAAM,IAAK;IAC/BZ,eAAe,CAACY,MAAM,CAAC;IACvBV,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAC/Bf,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMgB,YAAY,GAAIJ,MAAM,IAAK;IAC/B,IAAID,mBAAmB,CAACC,MAAM,CAAC,EAAE;MAC/B;MACAV,eAAe,CAAEe,YAAY,IAC3BA,YAAY,KAAKL,MAAM,GAAG,IAAI,GAAGA,MACnC,CAAC;MACDZ,eAAe,CAAC,IAAI,CAAC;IACvB;EACF,CAAC;EAEDU,OAAO,CAACQ,GAAG,CAACxB,OAAO,CAAC;EAEpB,MAAMyB,WAAW,GAAIP,MAAM,IAAK;IAC9B,MAAMQ,SAAS,GAAG,CAAC;;IAEnB;IACA,MAAMC,SAAS,GAAG,EAAE;;IAEpB;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIF,SAAS,EAAEE,CAAC,EAAE,EAAE;MACnC,IAAIA,CAAC,IAAIV,MAAM,EAAE;QACf;QACAS,SAAS,CAACE,IAAI,eACZhC,OAAA;UAAciC,SAAS,EAAC,aAAa;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAS,CAAE;UAAAC,QAAA,EAAC;QAElE,GAFWL,CAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACR,CAAC;MACH,CAAC,MAAM;QACL;QACAV,SAAS,CAACE,IAAI,eACZhC,OAAA;UAAciC,SAAS,EAAC,YAAY;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAAAC,QAAA,EAAC;QAE/D,GAFWL,CAAC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACR,CAAC;MACH;IACF;IAEA,oBACExC,OAAA;MAAKiC,SAAS,EAAC,aAAa;MAAAG,QAAA,EAAEN;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAElD,CAAC;EAED,oBACExC,OAAA;IAAKiC,SAAS,EAAC,cAAc;IAAAG,QAAA,gBAC3BpC,OAAA;MAAAoC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBxC,OAAA;MAAAoC,QAAA,GAAG,WAAS,EAAC/B,IAAI;IAAA;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxC,OAAA;MAAAoC,QAAA,EACGjC,OAAO,CAACsC,GAAG,CAAEpB,MAAM,iBAClBrB,OAAA;QAAKiC,SAAS,EAAC,iBAAiB;QAAAG,QAAA,gBAC9BpC,OAAA;UAAAoC,QAAA,EAAIR,WAAW,CAACP,MAAM,CAACA,MAAM;QAAC;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCxC,OAAA;UAAAoC,QAAA,GAAG,YAAU,EAACf,MAAM,CAACC,QAAQ;QAAA;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACjCpB,mBAAmB,CAACC,MAAM,CAAC,iBAC1BrB,OAAA;UAAAoC,QAAA,gBACEpC,OAAA;YAAM0C,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAACF,MAAM,CAAE;YAACY,SAAS,EAAC,aAAa;YAAAG,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACPxC,OAAA;YAAM0C,OAAO,EAAEA,CAAA,KAAMjB,YAAY,CAACJ,MAAM,CAAE;YAACY,SAAS,EAAC,aAAa;YAAAG,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACN,EACAhC,YAAY,IAAIA,YAAY,CAACmC,EAAE,KAAKtB,MAAM,CAACsB,EAAE,IAAInC,YAAY,CAACc,QAAQ,KAAKD,MAAM,CAACC,QAAQ,iBACzFtB,OAAA,CAACH,YAAY;UAAC+C,QAAQ,EAAEpC,YAAY,CAACmC,EAAG;UAACtC,IAAI,EAAEG,YAAY,CAACc;QAAS;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CACvE,EACA9B,YAAY,IAAIA,YAAY,CAACiC,EAAE,KAAKtB,MAAM,CAACsB,EAAE,iBAC5C3C,OAAA,CAACF,YAAY;UAAC8C,QAAQ,EAAElC,YAAY,CAACiC,EAAG;UAACE,QAAQ,EAAEA,CAAA,KAAMpB,YAAY,CAACJ,MAAM;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CACjF;MAAA,GAlBmCnB,MAAM,CAACsB,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAmB1C,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACtC,EAAA,CAjHQD,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAmHhB,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}