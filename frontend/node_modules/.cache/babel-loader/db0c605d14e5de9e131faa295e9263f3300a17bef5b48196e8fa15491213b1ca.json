{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/loginuser.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginUser({\n  onLoginSuccess\n}) {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  let handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/loginuser\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"password\": password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setMessage(\"Login successfull!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        // Locally store username to use throughout frontend\n        localStorage.setItem(\"user\", username);\n        onLoginSuccess();\n        // Redirect user to ratings page\n        navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n        // Access the error message from backend\n        setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginUser\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 45\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginUser, \"T2T1fReLIgeIYntMDPHjrbt+CuI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginUser;\nexport default LoginUser;\nvar _c;\n$RefreshReg$(_c, \"LoginUser\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginUser","onLoginSuccess","_s","username","setUsername","password","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","res","fetch","method","body","JSON","stringify","headers","resJson","json","status","localStorage","setItem","error","err","console","log","className","children","onSubmit","type","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/COMP333_HW3/frontend/src/loginuser.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction LoginUser({ onLoginSuccess }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n \n  let handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let res = await fetch(\"http://localhost/COMP333_HW3/index.php/loginuser\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          \"username\": username,\n          \"password\": password\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      let resJson = await res.json();\n      if (res.status === 200) {\n        setMessage(\"Login successfull!\");\n        setUsername(\"\");\n        setPassword(\"\");\n        // Locally store username to use throughout frontend\n        localStorage.setItem(\"user\", username);\n        onLoginSuccess();\n        // Redirect user to ratings page\n        navigate(\"/ratingstable\");\n      } else if (res.status === 400) {\n          // Access the error message from backend\n          setMessage(resJson.error);\n      } else {\n        setMessage(\"Something went wrong\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className=\"LoginUser\">\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={username}\n          placeholder=\"Username\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          value={password}\n          placeholder=\"Password\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type=\"submit\">Login</button>\n\n        <div className=\"message\">{message ? <p>{message}</p> : null}</div>\n      </form>\n    </div>\n  );\n\n}\n  \n  export default LoginUser;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAC;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMa,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,IAAIa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnB,UAAU,EAAEf,QAAQ;UACpB,UAAU,EAAEE;QACd,CAAC,CAAC;QACFc,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACF,IAAIC,OAAO,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC9B,IAAIR,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QACtBd,UAAU,CAAC,oBAAoB,CAAC;QAChCJ,WAAW,CAAC,EAAE,CAAC;QACfE,WAAW,CAAC,EAAE,CAAC;QACf;QACAiB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAErB,QAAQ,CAAC;QACtCF,cAAc,CAAC,CAAC;QAChB;QACAQ,QAAQ,CAAC,eAAe,CAAC;MAC3B,CAAC,MAAM,IAAII,GAAG,CAACS,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAd,UAAU,CAACY,OAAO,CAACK,KAAK,CAAC;MAC7B,CAAC,MAAM;QACLjB,UAAU,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxB/B,OAAA;MAAMgC,QAAQ,EAAErB,YAAa;MAAAoB,QAAA,gBAC3B/B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE9B,QAAS;QAChB+B,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGxB,CAAC,IAAKP,WAAW,CAACO,CAAC,CAACyB,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFzC,OAAA;QACEiC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAE5B,QAAS;QAChB6B,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAGxB,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACyB,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFzC,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEpCzC,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAEvB,OAAO,gBAAGR,OAAA;UAAA+B,QAAA,EAAIvB;QAAO;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,GAAG;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGV;AAACtC,EAAA,CA9DQF,SAAS;EAAA,QAICH,WAAW;AAAA;AAAA4C,EAAA,GAJrBzC,SAAS;AAgEhB,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}