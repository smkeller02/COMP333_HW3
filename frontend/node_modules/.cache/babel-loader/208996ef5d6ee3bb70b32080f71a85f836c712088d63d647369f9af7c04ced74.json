{"ast":null,"code":"var _jsxFileName = \"/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/searchfilterratings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Filters() {\n  _s();\n  const [ratings, setRatings] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [singerFilter, setSingerFilter] = useState(\"\");\n  const [ratingFilter, setRatingFilter] = useState(\"\");\n  const fetchData = async () => {\n    // Fetch data from the backend without any filtering\n    try {\n      const response = await fetch(\"http://localhost/COMP333_HW3/index.php/getratings\");\n      if (response.ok) {\n        const data = await response.json();\n        setRatings(data);\n      } else {\n        console.error(\"Failed to fetch data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const applyFilters = () => {\n    // Create a copy of the original data to apply filters\n    let filteredData = [...ratings];\n\n    // Apply the search filter (song name and singer)\n    filteredData = filteredData.filter(rating => {\n      return rating.song.toLowerCase().includes(searchText.toLowerCase()) || rating.singer.toLowerCase().includes(searchText.toLowerCase());\n    });\n\n    // Apply the singer filter\n    if (singerFilter) {\n      filteredData = filteredData.filter(rating => rating.singer.toLowerCase().includes(singerFilter.toLowerCase()));\n    }\n\n    // Apply the rating filter\n    if (ratingFilter) {\n      filteredData = filteredData.filter(rating => rating.rating === parseInt(ratingFilter));\n    }\n    setRatings(filteredData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by Song Name or Singer\",\n        value: searchText,\n        onChange: e => setSearchText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-options\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Filter by Singer\",\n        value: singerFilter,\n        onChange: e => setSingerFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Filter by Rating\",\n        value: ratingFilter,\n        onChange: e => setRatingFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyFilters,\n        children: \"Apply Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filtered-results\",\n      children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Song: \", rating.song]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Singer: \", rating.singer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", rating.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, rating.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Filters, \"mQQq6a1iqeRN6XDodPR9FCkgFkA=\");\n_c = Filters;\nexport default Filters;\nvar _c;\n$RefreshReg$(_c, \"Filters\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Filters","_s","ratings","setRatings","searchText","setSearchText","singerFilter","setSingerFilter","ratingFilter","setRatingFilter","fetchData","response","fetch","ok","data","json","console","error","applyFilters","filteredData","filter","rating","song","toLowerCase","includes","singer","parseInt","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","_c","$RefreshReg$"],"sources":["/Users/minjiwoo/Desktop/comp333/COMP333_HW3/frontend/src/searchfilterratings.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Filters() {\n  const [ratings, setRatings] = useState([]);\n  const [searchText, setSearchText] = useState(\"\");\n  const [singerFilter, setSingerFilter] = useState(\"\");\n  const [ratingFilter, setRatingFilter] = useState(\"\");\n\n  const fetchData = async () => {\n    // Fetch data from the backend without any filtering\n    try {\n      const response = await fetch(\"http://localhost/COMP333_HW3/index.php/getratings\");\n      if (response.ok) {\n        const data = await response.json();\n        setRatings(data);\n      } else {\n        console.error(\"Failed to fetch data\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const applyFilters = () => {\n    // Create a copy of the original data to apply filters\n    let filteredData = [...ratings];\n\n    // Apply the search filter (song name and singer)\n    filteredData = filteredData.filter((rating) => {\n      return (\n        rating.song.toLowerCase().includes(searchText.toLowerCase()) ||\n        rating.singer.toLowerCase().includes(searchText.toLowerCase())\n      );\n    });\n\n    // Apply the singer filter\n    if (singerFilter) {\n      filteredData = filteredData.filter((rating) =>\n        rating.singer.toLowerCase().includes(singerFilter.toLowerCase())\n      );\n    }\n\n    // Apply the rating filter\n    if (ratingFilter) {\n      filteredData = filteredData.filter(\n        (rating) => rating.rating === parseInt(ratingFilter)\n      );\n    }\n\n    setRatings(filteredData);\n  };\n\n  return (\n    <div className=\"filters-container\">\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by Song Name or Singer\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n        />\n      </div>\n      <div className=\"filter-options\">\n        <input\n          type=\"text\"\n          placeholder=\"Filter by Singer\"\n          value={singerFilter}\n          onChange={(e) => setSingerFilter(e.target.value)}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Filter by Rating\"\n          value={ratingFilter}\n          onChange={(e) => setRatingFilter(e.target.value)}\n        />\n        <button onClick={applyFilters}>Apply Filters</button>\n      </div>\n      <div className=\"filtered-results\">\n        {ratings.map((rating) => (\n          <div key={rating.id}>\n            <p>Song: {rating.song}</p>\n            <p>Singer: {rating.singer}</p>\n            <p>Rating: {rating.rating}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Filters;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}